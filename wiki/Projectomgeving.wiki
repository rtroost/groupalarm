#labels Phase-Requirements,Phase-Design
= De projectomgeving =

== Ontwikkel methodiek ==
Voordat het product gerealiseerd kan worden moeten er een aantal zaken helder zijn. Ten eerste hoe gaan we het product ontwikkelen? Hiervoor gebruiken we de project ontwikkelmethode SCRUM. We maken gebruik van een SCRUM product backlog, hierop komen alle toekomstige functionaliteiten en features van het product te staan. Vervolgens bepalen we per feature de prioriteit en delen we de features op in SCRUM sprints. De features met de hoogste prioritijd worden als eerste uitgevoerd. Per feature worden de benodigde taken opgesteld, de taken worden door de projectleden opgepakt en uitgevoerd. Op deze manier krijgt het product snel een stabiele en demonstreerbare vorm.

== Functionaliteiten ==
Ons product bestaat uit hoofdfunctionaliteiten en extra functionaliteiten. De hoofdfunctionaliteiten bestaan uit de features die noodzakelijk zijn om onze oplossing te realiseren. De hoofdfunctionaliteiten zijn: 

<ul>
<li>De wekker.</li>
<li>Het aanmaken van een groep met een beheerder (doormiddel van telefoonnummer).</li>
<li>De ingestelde tijd moet gesynchroniseerd worden.</li>
<li>Iedereen moet zijn eigen reistijd in kunnen stellen.</li>
<li>Het opgeven van een alternatief telefoonnummer.</li>
<li>Het van elkaar kunnen zien of ze wakker zijn geworden.</li>
</ul>

De extra functionaliteiten zijn:

<ul>
<li>Google Maps de reistijd laten berekenen en dat aanbieden voor elk groepslid.</li>
<li>Extra informatie opgeven over het event.</li>
<li>Een andere manier van wekken dan een normale wekker.</li>
<li>Een trucje waardoor je iets moet doen om je wekker uit te zetten (bijvoorbeeld een rekensom ).</li>
</ul>

== Platform ==
We hebben besloten om een smartphone applicatie te maken om de probleemstelling op te lossen. We gaan ons hoofdzakelijk richten op Android, iOS, BlackBerryOS en Windows Phone. Dit gaan we doen door middel van het open source framework PhoneGap. Met PhoneGap is het mogelijk om een web applicatie te maken voor meerdere smartphone platformen. Op deze manier wordt het gemakkelijk om onze applicatie op meerdere platformen aan te bieden. Ook richten wij een webserver in waar een database op komt te staan. Deze server zorgt er voor dat de data van de applicaties van iedereen in een groep gesynchroniseerd wordt. De applicatie vraagt data aan of stuurt data naar de webserver, de webserver verwerkt de data en slaat het op in een database. De webserver maakt gebruik van PHP in combinatie met een MySQL database. De web applicatie communiceert doormiddel van Ajax requests met de webserver.